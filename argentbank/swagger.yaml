swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  #  /transactions:
  #   get:
  #     security: 
  #       - bearerAuth
  #     tags: 
  #       - Transactions Module
  #   summary: Get all transactions
  #   description: Retrieve the list of all transactions of an authenticated user
  #   parameters: 
  #     - in: header
  #       name: Authorization
  #       description: Attach Bearer JWT token
  #       required: true
  #       schema:
  #       type: string
  #   produces:
  #     - application/json
  #   responses:
  #     '200':
  #       description:  Successfully retrieved all transactions
  #       content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/TransactionList'
  #     '401':
  #       description: Unauthorized
  #     '500':
  #       description: Internal Server Error
  # /transactions/{transactionId}:
  #   get:
  #     tags: 
  #       - Transactions Module
  #     summary: Get transactions details
  #     description: Retrieve details of a transaction
  #     parameters:
  #       - in: header
  #         name: Authorization
  #         description: Attach Bearer token
  #         required: true
  #         type: string
  #       - in: path
  #         name: transactionId
  #         description: ID of the transaction
  #         required: true
  #         type: string
  #     response:
  #       '200':
  #         description: Successfully retrieved the transaction
  #         schema:
  #           $ref: '#/definitions/Transaction'
  #       '401':
  #         description: Unauthorized
  #       '404': 
  #         description: Transaction not found
  #       '500': 
  #         description: Internal Server Error

  #   put:
  #     tags: 
  #       - Transactions Module
  #     summary: Update transaction category
  #     description: Update the category for an existing transaction
  #     parameters:
  #       - in: header
  #         name: Authorization
  #         description: Attach Bearer token
  #         required: true
  #         type: string
  #       - in: path
  #         name: transactionId
  #         description: ID of the transaction
  #         required: true
  #         type: string
  #       - in: body
  #         name: category
  #         description: New category for the transaction
  #         required: true
  #         schema: 
  #           type: string
  #           enum: [Food, Housing, Transportation, Clothing, Insurance, Entertainment, Education, Health, Others]
  #     response: 
  #       '200':
  #         description: Transaction category updated successfully
  #         schema: 
  #           $ref: '#/definitions/Transaction'
  #       '401':
  #         description: Unauthorized
  #       '404':
  #         description: Transaction not found
  #       '500':
  #         description: Internal Server Error
  #   patch:
  #     tags: 
  #       - Transactions Module
  #   summary: Update transaction notes
  #   description: Update the notes for an existing transaction
  #   parameters:
  #    - in: header
  #      name: Authorization
  #      description: Attach Bearer token
  #      required: true
  #      type: string
  #    - in: path
  #      name: transactionId
  #      description: ID of the transaction
  #      required: true
  #      type: string
  #    - in: body
  #      name: notes
  #      description: New notes for the Transaction
  #      required: true
  #      schema:
  #       type: string
  #     response:
  #       '200':
  #         description: Transaction notes updated successfully
  #         schema:
  #           $ref: '#/definitions/Transaction'
  #       '401':
  #         description: Unauthorized
  #       '404':
  #         description: Transaction not found
  #       '500':
  #         description: Internal Server Error  
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string

